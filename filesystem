package searcht;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;

public class mysearch {

	public static void main(String[] args) {
		System.out.println("Welcome to the Search Tool");
		rfolder robj = new rfolder();
		java.io.File f = new java.io.File("/home/pie/Documents");
		 if(f.exists()) {
			 System.out.println("The path is existing");	
			 File [] d = f.listFiles();
			 	for (File a : d) {
			 			try {
			 				robj.isfolder(a);
			 			}
			 			
			 			catch (Exception ex) {
			 				
			 			}
			 			
			 	}		 
		 }
		  
		 else {
			 System.out.println("Path not valid");
			 
		 }
	
		 System.out.print(robj.returnmycounter());
	}

}

class rfolder{	
	int k = 0;
	File [] d2;
	writetofile record = new writetofile();
	void isfolder(File a) throws IOException {
		if (a.isDirectory()) {
			d2 = a.listFiles();			
			for (File d3 : d2) {
				if (d3.isDirectory()) { 
					isfolder(d3);
				}
				
				else {
					k=k+1;
					record.write(d3.getAbsolutePath() + "\t" +  new java.util.Date(d3.lastModified()) + "\t" + d3.length()/1000 );
				}
				
			}
		}
		
		else {
			
			record.write(a.getAbsolutePath() + "\t" +  new java.util.Date(a.lastModified()) + "\t" + a.length()/1000 );
			k=k+1;
		}
		
		
	}
	
	int returnmycounter() {
		return k;
	}

}



class writetofile {
		
	void write(String a ) throws IOException{
	
		PrintWriter outputfile = null;
		
		try {
			outputfile = new PrintWriter(new FileOutputStream(new File("/home/pie/report.txt"),true));
			outputfile.append(a);
			outputfile.append("\n");
			outputfile.flush();
			outputfile.close();
	}
		
		catch (Exception  e) {
			
		}
	}
}



